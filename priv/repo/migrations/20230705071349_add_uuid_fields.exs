defmodule Spendable.Repo.Migrations.AddUuidFields do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    alter table(:users) do
      add :uuid, :uuid, default: fragment("uuid_generate_v4()")
    end

    create unique_index(:users, [:uuid], name: "users_uuid_index")

    alter table(:transactions) do
      add :uuid, :uuid, default: fragment("uuid_generate_v4()")
    end

    create unique_index(:transactions, [:uuid], name: "transactions_uuid_index")

    alter table(:budgets) do
      add :uuid, :uuid, default: fragment("uuid_generate_v4()")
    end

    create unique_index(:budgets, [:uuid], name: "budgets_uuid_index")

    alter table(:budget_allocations) do
      add :uuid, :uuid, default: fragment("uuid_generate_v4()")
    end

    create unique_index(:budget_allocations, [:uuid], name: "budget_allocations_uuid_index")

    alter table(:budget_allocation_templates) do
      add :uuid, :uuid, default: fragment("uuid_generate_v4()")
    end

    create unique_index(:budget_allocation_templates, [:uuid],
             where: "archived_at IS NULL",
             name: "budget_allocation_templates_uuid_index"
           )

    alter table(:budget_allocation_template_lines) do
      add :uuid, :uuid, default: fragment("uuid_generate_v4()")
    end

    create unique_index(:budget_allocation_template_lines, [:uuid],
             name: "budget_allocation_template_lines_uuid_index"
           )

    alter table(:bank_transactions) do
      add :uuid, :uuid, default: fragment("uuid_generate_v4()")
    end

    create unique_index(:bank_transactions, [:uuid], name: "bank_transactions_uuid_index")

    alter table(:bank_members) do
      add :uuid, :uuid, default: fragment("uuid_generate_v4()")
    end

    create unique_index(:bank_members, [:uuid], name: "bank_members_uuid_index")

    alter table(:bank_accounts) do
      add :uuid, :uuid, default: fragment("uuid_generate_v4()")
    end

    create unique_index(:bank_accounts, [:uuid], name: "bank_accounts_uuid_index")
  end

  def down do
    drop_if_exists unique_index(:bank_accounts, [:uuid], name: "bank_accounts_uuid_index")

    alter table(:bank_accounts) do
      remove :uuid
    end

    drop_if_exists unique_index(:bank_members, [:uuid], name: "bank_members_uuid_index")

    alter table(:bank_members) do
      remove :uuid
    end

    drop_if_exists unique_index(:bank_transactions, [:uuid], name: "bank_transactions_uuid_index")

    alter table(:bank_transactions) do
      remove :uuid
    end

    drop_if_exists unique_index(:budget_allocation_template_lines, [:uuid],
                     name: "budget_allocation_template_lines_uuid_index"
                   )

    alter table(:budget_allocation_template_lines) do
      remove :uuid
    end

    drop_if_exists unique_index(:budget_allocation_templates, [:uuid],
                     name: "budget_allocation_templates_uuid_index"
                   )

    alter table(:budget_allocation_templates) do
      remove :uuid
    end

    drop_if_exists unique_index(:budget_allocations, [:uuid],
                     name: "budget_allocations_uuid_index"
                   )

    alter table(:budget_allocations) do
      remove :uuid
    end

    drop_if_exists unique_index(:budgets, [:uuid], name: "budgets_uuid_index")

    alter table(:budgets) do
      remove :uuid
    end

    drop_if_exists unique_index(:transactions, [:uuid], name: "transactions_uuid_index")

    alter table(:transactions) do
      remove :uuid
    end

    drop_if_exists unique_index(:users, [:uuid], name: "users_uuid_index")

    alter table(:users) do
      remove :uuid
    end
  end
end
