jobs:
  include:
  - stage: Build
    name: Tests
    language: elixir
    elixir: 1.10
    otp_release: 22.2.6
    services:
    - postgresql
    - redis-server
    cache:
      directories:
      - deps
      - _build
    env:
    - MIX_ENV=test
    before_script: mix ecto.reset
    script: mix do compile --warnings-as-errors, coveralls.json
    after_success: bash <(curl -s https://codecov.io/bash)
  - name: Credo
    language: elixir
    elixir: 1.10
    otp_release: 22.2.6
    cache:
      directories:
      - deps
      - _build
    before_script: mix compile
    script: mix credo --strict
  - name: Build
    if: branch = master
    language: minimal
    before_script:
      - cat deploy/gcloud-credentials.json | docker login -u _json_key --password-stdin https://us.gcr.io
      - docker pull us.gcr.io/cloud-57/spendable-api:latest
    script:
      - docker build
        --build-arg DB_PASSWORD
        --build-arg GUARDIAN_SECRET
        --build-arg PLAID_CLIENT_ID
        --build-arg PLAID_PUBLIC_KEY
        --build-arg PLAID_SECRET_KEY
        --build-arg SECRET_KEY_BASE
        --cache-from us.gcr.io/cloud-57/spendable-api:latest
        -f deploy/Dockerfile
        -t us.gcr.io/cloud-57/spendable-api:latest .
    after_success: docker push us.gcr.io/cloud-57/spendable-api:latest
  - stage: Deploy
    if: branch = master
    name: Deploy
    cache:
      directories:
      - "$HOME/google-cloud-sdk/"
    before_script:
      - if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
      - source $HOME/google-cloud-sdk/path.bash.inc
      - gcloud auth activate-service-account --key-file deploy/gcloud-credentials.json
      - gcloud config set project cloud-57
    script:
      - gcloud compute instance-groups managed rolling-action replace spendable-api
        --region=us-central1
        --max-unavailable 0
        --max-surge 3
before_install:
- openssl aes-256-cbc -K $encrypted_b62a425c5f3b_key -iv $encrypted_b62a425c5f3b_iv
  -in deploy/gcloud-credentials.json.enc -out deploy/gcloud-credentials.json
  -d
